#!/usr/bin/expect -f

# Copyright (C) 2011-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
	-timeout 2
	-re "$target_prompt*" {}
	timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

set testfile morestack

gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$GDBPROMPT"

if ![runto_main] {
	    return -1
}

gdb_breakpoint "marker_hit"
gdb_breakpoint "marker_miss"

set test "continue"
send "$test\n" 
    expect {
    -re "marker_hit.*$GDBPROMPT" {
	send_user "pass"
    }
    -re "marker_miss.*$GDBPROMPT" {
	# The testcase failed to violated the frame_id_inner condition by
	# handing inner frame with higher (on the stack-grows-down arches)
	# $sp address than the outer frame.
	send_user "fail"
    set GRET [expr $GRET + 1]
    }
}

# FAIL was on `bt' producing:
# Backtrace stopped: previous frame inner to this frame (corrupt stack?)
gdb_test "up 3000" " in main .*"

exit $GRET
interact
