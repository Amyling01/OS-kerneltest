#!/usr/bin/expect -f

# Copyright 2009-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
	-timeout 2
	-re "$target_prompt*" {}
	timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

#if $tracelevel then {
#    strace $tracelevel
#}

#if {[skip_hw_watchpoint_tests]} {
#    return 0
#}

set testfile "pr11022"
set srcfile ${testfile}.c
#set binfile ${objdir}/${subdir}/${testfile}
#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
#     untested pr11022.exp
#     return -1
#}

# Start with a fresh gdb.

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}

gdb_test "'$GDB_TOOL_DIR'gdb pr11022" "$GDBPROMPT"

if ![runto_main] then {
    tst_fail "Can't run to main"
    return 0
}

gdb_test "break [gdb_get_line_number "break here"]" \
	".*Breakpoint.* at .*" \
	"set breakpoint"

gdb_test "watch x" ".*Hardware watchpoint.*" "set watchpoint"
gdb_test "continue" ".*break here.*" "breakpoint hit"
gdb_test "continue" ".*Hardware watchpoint.*Old value = 0.*New value = 42.*" \
    "watchpoint hit"
gdb_test "continue" ".*break here.*" "breakpoint hit 2"
gdb_test "set var x = 1" "$GDBPROMPT"
gdb_test "continue" ".*Hardware watchpoint.*Old value = 1.*New value = 42.*" \
    "watchpoint hit 2"

exit $GRET
interact
