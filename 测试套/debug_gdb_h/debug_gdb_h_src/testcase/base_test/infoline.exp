#!/usr/bin/expect -f

# Copyright (C) 2011-2012 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
	-timeout 2
	-re "$target_prompt*" {}
	timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

set testfile infoline
set srcfile ${testfile}.c

#if { [prepare_for_testing ${testfile}.exp ${testfile}] } {
#    return -1
#}

#clean_restart ${testfile}

gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$GDBPROMPT*"

# Verify that the "info line" command does not skip function prologues.
# If it did, GDB would tell us that the line we're interested in starts
# at <twice+N> where N is different from zero.
set fun_decl_line [gdb_get_line_number "THIS LINE"]
gdb_test "info line ${srcfile}:${fun_decl_line}" \
         "Line ${fun_decl_line} of \".*${testfile}\.c\" starts at address 0x.*twice>.*and ends at .*"

exit $GRET
interact
