#!/usr/bin/expect -f

# Copyright (C) 2008-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Check that GDB isn't messing the SIGCHLD mask while creating an
# inferior.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc             
global GDBPROMPT
global gdb_prompt
global target_ip 
global  target_prompt 

spawn ssh root@$target_ip
expect {
    -timeout 2
            -re "$target_prompt*" {}
    timeout {
		send_user "\n*****error: ssh root@$target_ip failed *****\n"
		exit -1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"
#if [target_info exists gdb,nosignals] {
#    verbose "Skipping sigchld.exp because of nosignals."
#    continue
#}

set testfile "sigchld"
set srcfile ${testfile}.c
#set binfile ${objdir}/${subdir}/${testfile}

#if {[gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
#    return -1
#}

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}

gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$GDBPROMPT"

runto_main

gdb_test "b 34" \
         ".*Breakpoint .*sigchld.*" "set breakpoint at success exit"

gdb_test "b 36" \
         ".*Breakpoint .*sigchld.*" "set breakpoint at failure exit"

gdb_test "continue" ".*good, not blocked.*" "SIGCHLD blocked in inferior"

exit $GRET
interact
