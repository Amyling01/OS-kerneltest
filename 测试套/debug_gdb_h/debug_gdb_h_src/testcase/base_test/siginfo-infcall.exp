#!/usr/bin/expect -f

# Copyright 2010-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
	-timeout 2
	-re "$target_prompt*" {}
	timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

#if [target_info exists gdb,nosignals] {
#    verbose "Skipping siginfo-infcall.exp because of nosignals."
#    continue
#}

set testfile siginfo-infcall
set srcfile ${testfile}.c
#set executable ${testfile}
#if { [prepare_for_testing ${testfile}.exp $executable] } {
#    return -1
#}

gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$GDBPROMPT"

if ![runto_main] {
    return -1
}

gdb_breakpoint "pass"
gdb_breakpoint "fail"

gdb_test "continue" "Program received signal SIGUSR1, .*" "continue to SIGUSR1"

gdb_test "p callme ()" " = 42"

set test "continue to the handler"
send "continue\n" 
    expect {
    -re "Breakpoint \[0-9\]+,\[^\r\n\]* pass .*\r\n$GDBPROMPT" {
	send_user "pass $test"
    }
    -re "Breakpoint \[0-9\]+,\[^\r\n\]* fail .*\r\n$GDBPROMPT" {
	send_user "fail $test"
    }
}

exit $GRET
interact
