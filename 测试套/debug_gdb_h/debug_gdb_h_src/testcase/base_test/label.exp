#!/usr/bin/expect -f

# Copyright 2010-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
	-timeout 2
	-re "$target_prompt*" {}
	timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

#if $tracelevel then {
#    strace $tracelevel
#}


#if [is_remote target] then {
#    return 0
#}


#
# test running programs
#
#set testfile "label"
#set srcfile ${testfile}.c
#set binfile ${objdir}/${subdir}/${testfile}

#if { [prepare_for_testing ${testfile}.exp $testfile ${testfile}.c debug] } {
#    untested label.exp
#    return -1
#}

gdb_test "'$GDB_TOOL_DIR'gdb label" "$GDBPROMPT"

if {![runto_main]} {
  tst_fail "label tests suppressed"
  return -1
}

gdb_test "break here" \
  "Breakpoint.*at.*" \
  "breakpoint here"

gdb_test "break main:there" \
  "Breakpoint.*at.*" \
  "breakpoint there"

gdb_test "cont" \
  "Breakpoint 3,.*" \
  "continue to 'there'"

gdb_test "cont" \
  "Breakpoint 2,.*" \
  "continue to 'here'"

gdb_test "r" "\\(y or n\\)"
gdb_test "y" "int i = 0;.*$GDBPROMPT"

gdb_test "cont" \
  "Breakpoint 3,.*" \
  "continue to 'there' after re-run"

exit $GRET
interact
