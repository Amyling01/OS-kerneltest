#!/usr/bin/expect -f

# Copyright 2008-2012 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc             
global GDBPROMPT
global gdb_prompt
global target_ip 
global target_prompt 

spawn ssh root@$target_ip
expect {
    -timeout 2
       -re "$target_prompt*" {}
    timeout {
		send_user "\n*****error: ssh root@$target_ip failed*****\n"
		exit 1
	}
}

set target_prompt "/tmp/for_gdb_test/base_test"
gdb_test "cd /tmp/for_gdb_test/base_test" "$target_prompt"

#if $tracelevel then {
#    strace $tracelevel
#}

#set testfile "stack-checking"
#set srcfile ${testfile}.c
#set binfile ${objdir}/${subdir}/${testfile}

#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable [concat debug additional_flags=-fstack-check nowarnings]] != "" } {
#     untested stack-checking.exp
#     return -1
#}

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}

gdb_test "'$GDB_TOOL_DIR'gdb stack-checking" "$GDBPROMPT*"

if ![runto_main] then {
    tst_fail "Can't run to main"
    return 0
}

# Test that the debugger is able to unwind to "main" at the next breakpoint
# hit. The frame number of "main" should be passed into MAIN_FRAME_NUMBER."
proc backtrace_test {name main_frame_number} {
    gdb_continue_to_breakpoint "breakpoint for $name"
    gdb_test "bt" "#${main_frame_number}.*in main ().*"
}

gdb_breakpoint 28
backtrace_test "small frame" "1"
backtrace_test "medium frame" "2"
backtrace_test "big frame" "2"

exit $GRET
interact
