#!/usr/bin/expect -f 
source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re
global TEST_LEN TEST_OFFSET
spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/long_point"
gdb_test "cd /tmp/for_gdb_test/long_point" "$target_prompt"

set srcfile v1r3c00_gdb-long-hwbpoint_tc001.c

gdb_test "'$GDB_TOOL_DIR'gdb v1r3c00_gdb-long-hwbpoint_tc001" "$gdb_prompt"

set VM_ADDR 0x40000000

gdb_test "b main" "reakpoint 1 at .* $srcfile.*$gdb_prompt"
gdb_test "r $TEST_LEN $TEST_OFFSET" "Breakpoint 1, main .* at $srcfile.*$gdb_prompt"
gdb_test "b 102" "reakpoint 2 at .* $srcfile.*$gdb_prompt"
gdb_test "c" "mmap pass.*reakpoint 2.*$gdb_prompt"

gdb_test "delete breakpoints" "y or n"
gdb_test "y" "$gdb_prompt"
gdb_test "mwatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"
gdb_test "mwatch *$VM_ADDR len 0x30000000" "not aligned as rule.*$gdb_prompt"
gdb_test "mrwatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"
gdb_test "mrwatch *$VM_ADDR len 0x30000000" "not aligned as rule.*$gdb_prompt"
gdb_test "mawatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"
gdb_test "mawatch *$VM_ADDR len 0x30000000" "not aligned as rule.*$gdb_prompt"
set VM_ADDR [expr $VM_ADDR + 0x4]
gdb_test "mwatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"
gdb_test "mrwatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"
gdb_test "mawatch *$VM_ADDR len 0x4" "not aligned as rule.*$gdb_prompt"

gdb_test "info breakpoint" "No breakpoints or watchpoints.*$gdb_prompt"

set VM_ADDR 0x40000000
set i 0
for {set i 3} {$i<7} {incr i} {
    gdb_test "mwatch *$VM_ADDR len 0x400000" "Hardware long mem watchpoint $i: \\\*$VM_ADDR.*$gdb_prompt"
    set VM_ADDR [expr $VM_ADDR + 0x400000]
}
set VM_ADDR [expr $VM_ADDR + 0x400000]

## arm64 架构变更，设置断点时不会检测个数，在触发断点时才提示断点不够

gdb_test "mwatch *$VM_ADDR len 0x400" "$gdb_prompt"
gdb_test "c" "Could not insert hardware watchpoint 7.*Could not insert hardware breakpoints:.*You may have requested too many hardware breakpoints/watchpoints.*$gdb_prompt"

gdb_test "delete breakpoints" "y or n"
gdb_test "y" "$gdb_prompt"
set VM_ADDR 0x40000000
set i 0
for {set i 8} {$i<12} {incr i} {
    gdb_test "mrwatch *$VM_ADDR len 0x10" "Hardware long mem read watchpoint $i: \\\*$VM_ADDR.*$gdb_prompt"
    set VM_ADDR [expr $VM_ADDR + 0x20]
}

set VM_ADDR [expr $VM_ADDR + 0x20]
gdb_test "mrwatch *$VM_ADDR len 0x10" "$gdb_prompt"
gdb_test "c" "Could not insert hardware watchpoint 12.*Could not insert hardware breakpoints:.*You may have requested too many hardware breakpoints/watchpoints.*$gdb_prompt"

gdb_test "delete breakpoints" "y or n"
gdb_test "y" "$gdb_prompt"
set VM_ADDR 0x40000000
set i 0
for {set i 13} {$i<18} {incr i} {
    gdb_test "mawatch *$VM_ADDR len 0x400000" "Hardware long mem access \\\(read/write\\\) watchpoint $i: \\\*$VM_ADDR.*$gdb_prompt"
    set VM_ADDR [expr $VM_ADDR + 0x400000]
}

set VM_ADDR [expr $VM_ADDR + 0x400000]
gdb_test "mawatch *$VM_ADDR len 0x400000" "$gdb_prompt"
gdb_test "c" "Could not insert hardware watchpoint 18.*Could not insert hardware breakpoints:.*You may have requested too many hardware breakpoints/watchpoints.*$gdb_prompt"
gdb_exit
exit $GRET

interact
