#!/usr/bin/expect -f 
# Tests for anonymous union support.
# Copyright 2011-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
set ARGC $argc
global GDBPROMPT
global GDB_TOOL_DIR
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/cp"
gdb_test "cd /tmp/for_gdb_test/cp" "$target_prompt"
set testfile anon-struct
set srcfile ${testfile}.cc
#set binfile ${objdir}/${subdir}/${testfile}
#if { [prepare_for_testing ${testfile}.exp ${testfile} ${srcfile} {debug c++}] } {
#     return -1
#}

gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$gdb_prompt"
if ![runto_main] {
    exit -1
}
gdb_test "ptype t::t" "type = void \\(t \\* const\\)" \
    "print type of t::t"

gdb_test "ptype X::t2" "type = struct X::t2 {\[\r\n \]*X::C2 m;\[\r\n \]*}" \
    "print type of X::t2"

gdb_test "ptype X::t2::t2" "type = void \\(X::t2 \\* const\\)" \
    "print type of X::t2::t2"

gdb_test "ptype t3::~t3" "type = void \\(t3 \\* const\\)" \
    "print type of t3::~t3"
exit $GRET

interact
