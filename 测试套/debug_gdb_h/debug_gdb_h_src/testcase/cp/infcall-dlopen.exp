#!/usr/bin/expect -f 
# Copyright 2010-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

#if {[skip_shlib_tests]} {
#    return 0
#}

#if [get_compiler_info not-used] {
#    return -1
#}

set testfile "infcall-dlopen"
set srcmainfile ${testfile}.cc
set srclibfile ${testfile}-lib.cc
set executable ${testfile}
#set libfile ${objdir}/${subdir}/${executable}.so
#set binfile ${objdir}/${subdir}/${executable}

# Use completely arbitrary file for $libfile source.
#if { [gdb_compile_shlib ${srcdir}/${subdir}/${srclibfile} ${libfile} {debug c++}] != ""
#     || [prepare_for_testing ${testfile}.exp ${executable} ${srcmainfile} {debug c++ shlib_load}] } {
#    return -1
#}

#gdb_load_shlibs $libfile

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
set ARGC $argc
global GDBPROMPT
global GDB_TOOL_DIR
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/cp"
set lib_dlopen $target_prompt/${executable}.so
gdb_test "cd /tmp/for_gdb_test/cp" "$target_prompt"
gdb_test "export LD_LIBRARY_PATH=$target_prompt" "$target_prompt"
gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$gdb_prompt"
if { ![runto_main] } {
    exit -1
}

for {set i 0} {$i < 10} {incr i} {
    gdb_test "p openlib (\"${lib_dlopen}\")" " = 1" "test $i"
    # Try to exploit the GDB trashed memory.
    gdb_test "b openlib" {Breakpoint [0-9]+ at .*} "test $i stub 1"
    gdb_test_no_output {delete $bpnum} "test $i stub 2"
}
exit $GRET

interact
