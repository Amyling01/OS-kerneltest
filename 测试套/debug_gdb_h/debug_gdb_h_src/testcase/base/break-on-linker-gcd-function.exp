#!/usr/bin/expect -f 
# Copyright 2011-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file is part of the gdb testsuite

# Test casting, especially between class types or pointer-to-class
# types.

# This file is part of the gdb testsuite

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/base"
gdb_test "cd /tmp/for_gdb_test/base" "$target_prompt"
#if $tracelevel then {
#    strace $tracelevel
#}

#
# test running programs
#
#if { [skip_cplus_tests] } { continue }

set testfile "break-on-linker-gcd-function"
set srcfile ${testfile}.cc
set binfile ${testfile}

#if [get_compiler_info ${binfile} "c++"] {
#    return -1;
#}

#set additional_flags {-ffunction-sections -Wl,--gc-sections}
#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable \
#	   [list debug c++ additional_flags=$additional_flags]] != "" } {
#    untested $srcfile
#    return -1
#}

#clean_restart $testfile
gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$gdb_prompt"

# Single hex digit
set xd {[0-9a-f]}

# This accepts e.g. "Breakpoint 1 at 0x40968a" (fixed GDB)
# but rejects e.g. "Breakpoint 1 at 0x4" (broken GDB).
gdb_test "b [gdb_get_line_number "'$GDB_TOOL_DIR'gdb break here"]" "Breakpoint \[0-9\] at 0x${xd}${xd}+: .*"
exit $GRET

interact
