#!/usr/bin/expect -f 
# Copyright 2004, 2007-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@gnu.org

# This is a test for the gdb invocation option -l.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/base"
gdb_test "cd /tmp/for_gdb_test/base" "$target_prompt"
#if $tracelevel then {
#    strace $tracelevel
#}


#global GDBFLAGS

# Skip test if target does not support argument passing.
#if [target_info exists noargs] {
#    return;
#}

#
# Test that -l is processed correctly.
#
#set old_gdbflags $GDBFLAGS
#set GDBFLAGS "$GDBFLAGS -l 42"
#gdb_exit
#gdb_start
gdb_test "'$GDB_TOOL_DIR'gdb -l 42" "$gdb_prompt"
gdb_test "show remotetimeout" \
	"Timeout limit to wait for target to respond is 42\." \
	"correct remotetimeout printed"

#set GDBFLAGS $old_gdbflags

exit $GRET

interact
