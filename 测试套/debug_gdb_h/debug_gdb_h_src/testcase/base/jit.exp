#!/usr/bin/expect -f 
# Copyright 2011-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/base"
gdb_test "cd /tmp/for_gdb_test/base" "$target_prompt"
#if $tracelevel {
#    strace $tracelevel
#}

#if {[skip_shlib_tests]} {
#    untested jit.exp
#    return -1
#}

#if {[get_compiler_info not-used]} {
#    warning "Could not get compiler info"
#    untested jit.exp
#    return 1
#}

#
# test running programs
#

set testfile jit-main
set srcfile ${testfile}.c
set binfile ${testfile}
#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
#    untested jit.exp
#    return -1
#}

set solib_testfile "jit-solib"
set solib_srcfile "${solib_testfile}.c"
set solib_binfile "${solib_testfile}1.so"
set solib_binfile_test_msg "$target_prompt/${solib_testfile}1.so"

# Note: compiling without debug info: the library goes through symbol
# renaming by munging on its symbol table, and that wouldn't work for .debug
# sections.  Also, output for "info function" changes when debug info is resent.
#if { [gdb_compile_shlib ${solib_srcfile} ${solib_binfile} {-fPIC}] != "" } {
#    untested jit.exp
#    return -1
#}

set solib_binfile_target $target_prompt/${solib_binfile}

proc one_jit_test {count match_str} {
    global verbose testfile solib_binfile_target solib_binfile_test_msg pf_prefix gdb_prompt GDB_TOOL_DIR

#    set old_pf_prefix $pf_prefix
#    lappend pf_prefix "one_jit_test-$count:"

#    clean_restart $testfile
    gdb_test "'$GDB_TOOL_DIR'gdb $testfile" "$gdb_prompt"
	gdb_test_no_output "set width 150"
	gdb_test_no_output "set height 400"

    # This is just to help debugging when things fail
#    if {$verbose > 0} {
	gdb_test "set debug jit 1"
#    }

    if { ![runto_main] } {
	    send_user  "Can't run to main"
	    exit -1
    }

    gdb_breakpoint [gdb_get_line_number "break here 0"]
    gdb_continue_to_breakpoint "break here 0"

    # Poke desired values directly into inferior instead of using "set args"
    # because "set args" does not work under gdbserver.
    gdb_test_no_output "set var argc = 2"
    gdb_test_no_output "set var libname = \"$solib_binfile_target\"" "set var libname = \"$solib_binfile_test_msg\""
    gdb_test_no_output "set var count = $count"

    gdb_breakpoint [gdb_get_line_number "break here 1"]
    gdb_continue_to_breakpoint "break here 1"

    gdb_test "info function jit_function" "$match_str"

    # This is just to help debugging when things fail
#    if {$verbose > 0} {
	gdb_test "maintenance print objfiles"
	gdb_test "maintenance info break"
#    }

    gdb_breakpoint [gdb_get_line_number "break here 2"]
    gdb_continue_to_breakpoint "break here 2"
    # All jit librares must have been unregistered
    gdb_test "info function jit_function" \
	"All functions matching regular expression \"jit_function\":" 
    gdb_exit
#    set pf_prefix $old_pf_prefix
}

one_jit_test 1 "${hex}  jit_function_0000"
one_jit_test 2 "${hex}  jit_function_0000\[\r\n\]+${hex}  jit_function_0001"
exit $GRET

interact
