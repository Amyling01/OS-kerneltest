#!/usr/bin/expect -f 
# Copyright 2002-2004, 2007-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# This file was written by Michael Snyder (msnyder@redhat.com)
# This is a test for the gdb command "info proc"

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/base"
gdb_test "cd /tmp/for_gdb_test/base" "$target_prompt"
#if $tracelevel then {
#	strace $tracelevel
#}

#if { [is_remote target] } then {
#  continue
#}


set ws "\[ \t\]+"

set testfile "break"
set srcfile ${testfile}.c
set srcfile1 ${testfile}1.c
set binfile ${testfile}

#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}0.o" object {debug nowarnings}] != "" } {
#     untested info-proc.exp
#     return -1
#}
#
#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile1}" "${binfile}1.o" object {debug nowarnings}] != "" } {
#     untested info-proc.exp
#     return -1
#}
#
#if  { [gdb_compile "${binfile}0.o ${binfile}1.o" "${binfile}" executable {debug nowarnings}] != "" } {
#     untested info-proc.exp
#     return -1
#}

# Start with a fresh gdb.

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}
set binfile "info-proc"
gdb_test "'$GDB_TOOL_DIR'gdb $binfile" "$gdb_prompt"

# Does this gdb support info proc?
send "help info proc\n"
expect {
    -re "Undefined info command: .proc..  Try .help info.*$gdb_prompt" {
	# info proc command not supported -- nothing to test here.
	send_user "'$GDB_TOOL_DIR'gdb does not support info proc on this target"
	exit -1;
    }
    -re "Show /proc process information about .*$gdb_prompt" {
#	pass "help info proc"
    }
    timeout {
        send_user "timeout help info proc"
        set GRET [expr $GRET + 1]
    }
}

gdb_test "info proc" "No current process.*" "info proc without a process"

if { ! [ runto_main ] } then {
#    untested info-proc.exp
    exit -2
}

gdb_test "info proc" "process ${decimal}.*" "info proc with process"

gdb_test "info proc mapping" \
	".*Mapped address spaces:.*${hex}${ws}${hex}${ws}${hex}${ws}${hex}.*" \
	"info proc mapping"
exit $GRET

interact
