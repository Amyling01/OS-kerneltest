#!/usr/bin/expect -f 
# Copyright (C) 2008-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

set target_prompt "/tmp/for_gdb_test/base"
gdb_test "cd /tmp/for_gdb_test/base" "$target_prompt"
gdb_test "export LD_LIBRARY_PATH=$target_prompt" "$target_prompt"
#if $tracelevel then {
#    strace $tracelevel
#}


#if {[skip_shlib_tests]} {
#    return 0
#}

set testfile "fixsection"
set srcfile ${testfile}.c
set binfile ${testfile}

set libfile "fixsectshr"
set libsrc ${libfile}.c
set lib_sl ${libfile}.sl

#set lib_opts [list debug nowarnings]
#set exec_opts [list debug nowarnings shlib=$lib_sl]

#if [get_compiler_info ${binfile}] {
#    return -1
#}

#if { [gdb_compile_shlib $libsrc $lib_sl $lib_opts] != ""
#     || [gdb_compile $srcfile $binfile executable $exec_opts] != ""} {
#    untested "Could not compile either $libsrc or $srcfile."
#    return -1
#}

# Start with a fresh gdb.

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}
#gdb_load_shlibs ${lib_sl}
gdb_test "'$GDB_TOOL_DIR'gdb $binfile" "$gdb_prompt"

if ![runto_main] then {
    send_user "Can't run to main"
    exit -1;
}

#
# set breakpoint at static function static_fun
#
gdb_test "break static_fun" \
    "Breakpoint.*at.* file .*${testfile}\\.c, line.*" \
    "breakpoint at static_fun"

#
# exit gdb
#
gdb_exit
exit $GRET

interact
