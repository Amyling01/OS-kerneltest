#!/usr/bin/expect -f 
# This testcase is part of GDB, the GNU debugger.

# Copyright 2009-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Please email any bugs, comments, and/or additions to this file to:
# bug-gdb@gnu.org

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        exit 1
    }
}
gdb_test "cd /tmp/for_gdb_test/threads" "$target_prompt*"

# This only works with on Linux targets.
#if ![istarget *-*-linux*] then {
#    return
#}

#if { [prepare_for_testing current-lwp-dead.exp current-lwp-dead] } {
#    return -1
#}

gdb_test "'$GDB_TOOL_DIR'gdb current-lwp-dead" "$GDBPROMPT"

if {[runto_main] <= 0} {
#    untested current-lwp-dead.exp
     set GRET [expr $GRET + 1]
     exit $GRET
}

gdb_test "b fn_return" "$GDBPROMPT"
gdb_test "c" ".*at-fn_return.*"
exit $GRET

interact
