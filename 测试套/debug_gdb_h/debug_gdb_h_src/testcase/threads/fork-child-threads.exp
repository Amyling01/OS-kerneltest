#!/usr/bin/expect -f 
# Copyright (C) 2008-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Only GNU/Linux is known to support `set follow-fork-mode child'.
source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

gdb_test "cd /tmp/for_gdb_test/threads" "$target_prompt*"

set testfile fork-child-threads
set srcfile ${testfile}.c
set binfile ${testfile}

#if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug}] != "" } {
#    return -1
#}


#gdb_load ${binfile}
gdb_test "'$GDB_TOOL_DIR'gdb $binfile" "$GDBPROMPT"
if ![runto_main] then {
   send_user " Can't run to main"
   exit -1
}

gdb_test "set follow-fork-mode child"
gdb_breakpoint "start"

# Make sure we can step over fork without losing our breakpoint.
gdb_test "next" ".*pthread_create \\(&thread, NULL, start, NULL\\);.*" "next over fork"

gdb_test "continue" "Breakpoint 2, start.*" "get to the spawned thread"

# Wrong:
# * 2 LWP 4466  start (arg=0x0) at fork-child-threads.c:28
# Correct:
# * 3 Thread 0x40a00950 (LWP 5553)  start (arg=0x0) at ../.././gdb/testsuite/gdb.threads/fork-child-threads.c:28
#   2 Thread 0x2aaaaaac3000 (LWP 5552)  0x00000031674076dd in pthread_join (threadid=<optimized out>, thread_return=<optimized out>) at pthread_join.c:89

gdb_test "info threads" " .* .*" "two threads found"
exit $GRET

interact
