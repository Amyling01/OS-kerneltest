#CROSS_COMPILE=armeb-linux-gnueabi-
ifeq ($(CROSS_COMPILE), x86_32-rtos-linux-gnu-)
    CROSS_COMPILE=x86_64-rtos-linux-gnu-
endif
ifeq ($(CROSS_COMPILE), x86_32-rtos-linux-gnu-intel_xeon_core_dh89xx_pch-)
    CROSS_COMPILE=x86_64-rtos-linux-gnu-intel_xeon_core_dh89xx_pch-
endif
CC      := $(CROSS_COMPILE)gcc

ifeq ($(TOOL_BIN_DIR),)
    TOOL_BIN_DIR=../ptrace_bin
endif

ifeq ($(M32), -m32)
    M32=
endif

CFLAGS  := $(M32) -g -O2 -Wall 
#CFLAGS  := -g
#ifeq ($(ARCH), arm)
#    targets := pexecl ptrace_attach ptrace_detach \
#               ptrace_get_thread_area ptrace_geteventmsg \
#               ptrace_getfpregs ptrace_getregs \
#			   ptrace_sethbpregs ptrace_gethbpregs \
#               ptrace_getsiginfo ptrace_kill \
#               ptrace_peekdata_arm ptrace_peektext_arm \
#               ptrace_peekuser   ptrace_pokedata_arm \
#               ptrace_poketext_arm ptrace_pokeuser \
#               ptrace_setfpregs ptrace_setoptions_exec \
#               ptrace_setoptions_fork  ptrace_setregs \
#               ptrace_setsiginfo ptrace_singlestep \
#               ptrace_syscall rmfile sig_loop \
#               ptrace_setvfpregs ptrace_getvfpregs ptrace_set_syscall
#else
#    targets := pexecl ptrace_attach ptrace_detach \
#               ptrace_get_thread_area ptrace_geteventmsg \
#               ptrace_getfpregs ptrace_getregs \
#               ptrace_getsiginfo ptrace_kill \
#               ptrace_peekdata_x86 ptrace_peektext_x86 \
#               ptrace_peekuser ptrace_pokedata_x86 \
#               ptrace_poketext_x86 ptrace_pokeuser \
#               ptrace_setfpregs ptrace_setoptions_exec \
#               ptrace_setoptions_fork  ptrace_setregs \
#               ptrace_setsiginfo ptrace_singlestep \
#               ptrace_syscall rmfile sig_loop 
#endif
#               ptrace_gethbpregs ptrace_sethbpregs \
