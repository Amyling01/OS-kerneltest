#!/usr/bin/expect -f 
# tls.exp -- Expect script to test thread-local storage without debuginfo
# Copyright (C) 2006-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

gdb_test "cd /tmp/for_gdbshell_test/threads" "$target_prompt*"
set testfile tls-nodebug
set srcfile ${testfile}.c
set binfile ${testfile}

#if [istarget "*-*-linux"] then {
#    set target_cflags "-D_MIT_POSIX_THREADS"
#} else {
#    set target_cflags ""
#}

#if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable []] != "" } {
#    return -1
#}

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir

#gdb_load ${binfile}
gdb_test "'$GDB_TOOL_DIR'gdbshell $binfile" "$GDBPROMPT"
if ![runto_main] then {
   send_user "Can't run to main"
   exit -1
}

# Formerly: Cannot access memory at address 0x0
gdb_test "p thread_local" "= 42" "thread local storage"

# Done!
#
gdb_exit

exit $GRET

interact
