#!/usr/bin/expect -f 
# multi-create.exp -- Test creating many threads in parallel
# Copyright (C) 2007-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

gdb_test "cd /tmp/for_gdbshell_test/threads" "$target_prompt*"
set testfile "multi-create"
set srcfile ${testfile}.c
set binfile ${testfile}

#if {[gdb_compile_pthreads "${srcdir}/${subdir}/${srcfile}" "${binfile}" \
#	 executable {debug}] != "" } {
#    return -1
#}

#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}
gdb_test "'$GDB_TOOL_DIR'gdbshell $binfile" "$GDBPROMPT"
runto_main

# Run to the beginning of create_function several times.  Make sure
# we always stop there, and not somewhere else in the guts of the
# thread library.

set bp_location1 [gdb_get_line_number "set breakpoint 1 here"]
gdb_breakpoint $srcfile:$bp_location1
for {set i 0} {$i < 32} {incr i} {
    gdb_test "continue" ".*Breakpoint $decimal,.*$srcfile:$bp_location1.*" \
	"continue to breakpoint $i"
}
exit $GRET

interact
