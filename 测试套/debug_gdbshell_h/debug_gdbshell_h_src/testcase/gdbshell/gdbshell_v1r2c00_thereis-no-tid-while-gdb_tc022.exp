#!/usr/bin/expect -f 
#######################################################################
##- @Copyright (C), 1988-2013, Huawei Tech. Co., Ltd.
##- @Suitename: debug_gdbshell_h
##- @Name: gdbshell_v1r2c00_thereis-no-tid-while-gdb_tc022
##- @Author: l00191161
##- @Date: 2013-10-17
##- @Precon: 支持gdbshell
##- @Brief: 调试的进程线程数满，无法创建工作线程
##- @Detail: 1，启动一个进程，该进程创建了大量线程数（无法再创建线程）。
#            2，gdbshell rtat其中该进程，应该无法创建工作线程，且不影响原有线程的执行
#            3，退出
##- @Expect: 无法创建工作线程，且不影响原有线程的执行
##- @Level: Level 3
##- @Auto: True
##- @Modify:
#######################################################################*/
source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re

spawn ssh root@$target_ip
expect {
    -timeout 2
    -re "$target_prompt*" {}
timeout {
        send_user "\n*****error: ssh root@$target_ip failed*****\n"
        set GRET [expr $GRET + 1]
        exit 1
    }
}

gdb_test "cd /tmp/for_gdbshell_test/gdbshell" "$target_prompt"
global testpid
global binfile
set binfile max_thread
set testpid 0
sleep 2
gdb_test "killall $binfile"
sleep 2

gdb_test "rm -rf /tmp/max_thread.log" 

gdb_test "./$binfile >> /dev/null &" "$target_prompt"
sleep 1
send "ps -ef | grep $binfile |grep -v \"grep $binfile\"|sed -n 1p |awk '\{print \$2\}'\n"
expect {
    -timeout 2
        -re "(\[0-9\]+)\r\n" {
            set testpid $expect_out(1,string)
        }
}

send_user "testpid=$testpid \n"

if { $testpid == 0 } {
     set GRET [expr $GRET + 1]
     exit $GRET
}

set maxthread 0
send "cat /tmp/max_thread.log\n"
expect {
    -timeout 2
    -re "(\[0-9\]+)\r\n" {
        set maxthread $expect_out(1,string)
    }
}

if { $maxthread == 0 } {
    send_user "get maxthread error\n"
    set GRET [expr $GRET + 1]
    gdb_test "killall $binfile"
    exit $GRET
}

set target_prompt "/tmp/for_gdbshell_test/gdbshell"
set maxthread [expr $maxthread + 2]

for { set i 1 } { $i < 5 } { incr i } {
    gdb_test "'$GDB_TOOL_DIR'gdbshell" "$gdb_prompt"

    gdb_test "rtat $testpid" "gdbshell_hook_point"
    gdb_test "show non-stop" "Controlling the inferior in non-stop mode is on."
    
    set THREAD_NUM 0
    send "info threads\n"
    expect {
        -timeout 2
        -re "max_thread" {
            incr THREAD_NUM
            exp_continue
        }
    }

    if { $THREAD_NUM != $maxthread } {
        send_user "threads num is $THREAD_NUM mismatch $maxthread while info threads"
        set GRET [expr $GRET + 1] 
    }
    gdb_exit
}

gdb_test "killall $binfile "
sleep 3
exit $GRET

interact
