#!/usr/bin/expect -f
# Copyright 2010-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re
global test_username test_password  target_passwd
global GDBSERVER_TOOL_DIR HOST_GDB_TOOL host_ip host_prompt host_passwd FLAG HOST_SDK_LIB_DIR 

spawn su $test_username
expect {
    -timeout 2
    -re "Password:" {
        send "$test_password\n"
        gdb_test "whoami" "$test_username"
    }
    timeout {
        gdb_test "whoami" "$test_username"
        if { $GRET != 0 } {
        send_user "timeout su"
        }
    }
}

if { $GRET != 0 } {
    send_user "su $test_username fail "
    exit $GRET
}

ssh_on_to_target
sleep 3 

 if { $GRET } {
    send_user "ssh on to $target_ip fail"
    exit $GRET
 }

set target_prompt "/tmp/for_gdbserver_test/gdbserver.base"
gdb_test "cd $target_prompt" "$target_prompt"
gdb_test "export LD_LIBRARY_PATH=$target_prompt" "$target_prompt"

set testfile "nostdlib"
set srcfile ${testfile}.c
gdb_test "'$GDBSERVER_TOOL_DIR'gdbserver $host_ip:1111 $testfile &" "$gdb_prompt"
gdb_test "exit"  "$host_prompt"
sleep 3

#gdb_test "export LD_LIBRARY_PATH=$HOST_SDK_LIB_DIR:."  "$host_prompt"
gdb_test "$HOST_GDB_TOOL $testfile" "$gdb_prompt"
gdb_test "target remote $target_ip:1111" "Remote debugging using $target_ip:1111.*$gdb_prompt"

gdb_test "set solib-search-path $HOST_SDK_LIB_DIR:." "$gdb_prompt"

#set srcfile ${testfile}.c
#set executable ${testfile}
#set binfile ${objdir}/${subdir}/${executable}

# If we're using a stub, breakpoints at the entry point will not trigger.
# See also the comment in break-entry.exp.

#if [target_info exists use_gdb_stub] {
#    untested ${testfile}.exp
#    return
#}

# default_target_compile would otherwise add "-lm" making the testcase
# dependent on whether the system libraries are already prelinked.
# prelink: Could not set /lib64/libm-2.11.1.so owner or mode: Operation not permitted
#set compile {
#    gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug additional_flags=-nostdlib}
#}
#set board [target_info name]
#if [board_info $board exists mathlib] {
#    set mathlib [board_info $dest mathlib]
#    set_board_info mathlib ""
#    set err [eval $compile]
#    set_board_info mathlib $mathlib
#} else {
#    set_board_info mathlib ""
#    set err [eval $compile]
#    unset_board_info mathlib
#}
#if {$err != ""} {
#    untested ${testfile}.exp
#    return -1
#}

#clean_restart $executable

gdb_breakpoint "*marker"
gdb_breakpoint "*_start"

#gdb_run_cmd

# Breakpoint 2, Stopped due to shared library event
# _start () at ./gdb.base/nostdlib.c:20

gdb_test "continue" {Breakpoint [0-9]+, marker .*} "continue to marker"
#gdb_test "c" {Breakpoint [0-9]+, .*_start .*} "stop at run"

#gdb_test "bt" ""
gdb_exit
exit $GRET

interact
