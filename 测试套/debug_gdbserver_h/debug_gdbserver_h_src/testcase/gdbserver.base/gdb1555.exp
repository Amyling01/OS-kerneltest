#!/usr/bin/expect -f
# Copyright 2004, 2007-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

# Test stepping into and continuing on from a function in
# a shared library (PR gdb/1555, was PR shlib/1280, shlib/1237).
# Tested on ppc-yellowdog-linux (Yellow Dog Linux 3.0 3.2.2-2a)

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re
global test_username test_password  target_passwd
global GDBSERVER_TOOL_DIR HOST_GDB_TOOL host_ip host_prompt host_passwd FLAG HOST_SDK_LIB_DIR 

spawn su $test_username
expect {
    -timeout 2
    -re "Password:" {
        send "$test_password\n"
        gdb_test "whoami" "$test_username"
    }
    timeout {
        gdb_test "whoami" "$test_username"
        if { $GRET != 0 } {
        send_user "timeout su"
        }
    }
}

if { $GRET != 0 } {
    send_user "su $test_username fail "
    exit $GRET
}

ssh_on_to_target
sleep 3 

 if { $GRET } {
    send_user "ssh on to $target_ip fail"
    exit $GRET
 }

set target_prompt "/tmp/for_gdbserver_test/gdbserver.base"
gdb_test "cd $target_prompt" "$target_prompt"
gdb_test "export LD_LIBRARY_PATH=$target_prompt" "$target_prompt"

set testfile gdb1555-main
set srcfile ${testfile}.c
gdb_test "'$GDBSERVER_TOOL_DIR'gdbserver $host_ip:1111 $testfile &" "$gdb_prompt"
gdb_test "exit"  "$host_prompt"
sleep 3

#gdb_test "export LD_LIBRARY_PATH=$HOST_SDK_LIB_DIR:."  "$host_prompt"
gdb_test "$HOST_GDB_TOOL $testfile" "$gdb_prompt"
gdb_test "target remote $target_ip:1111" "Remote debugging using $target_ip:1111.*$gdb_prompt"

gdb_test "set solib-search-path $HOST_SDK_LIB_DIR:." "$gdb_prompt"

#if {[skip_shlib_tests]} {
#    return 0
#}

set libfile gdb1555
#set srcfile ${testfile}.c
#set binfile ${objdir}/${subdir}/${testfile}

#set libsrc "${srcdir}/${subdir}/${libfile}.c"
#set libobj "${objdir}/${subdir}/${libfile}.so"
#set execsrc "${srcdir}/${subdir}/${srcfile}"

#remote_exec build "rm -f ${binfile}"

# get the value of gcc_compiled
#if [get_compiler_info] {
#    return -1
#}

#if { [gdb_compile_shlib $libsrc $libobj {debug}] != ""
#     || [gdb_compile $execsrc ${binfile} executable \
#	     [list debug shlib=${libobj}]] != "" } {
#    return -1
#}

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir
#gdb_load ${binfile}
#gdb_load_shlibs $libobj

#if ![runto_main] then {
#    fail "Can't run to main"
#    return 0
#}

gdb_test "b main" ""
gdb_test "c" ""

# PR/1555 (was shlib 1280)
set name "Step into shared lib function"
send "s\n"
expect {
    -timeout 5
    -re "hithere2 \\(\\) at ${libfile}.c:\[0-9\]+\r\n+\[0-9\]+.*a = 21;.*$gdb_prompt"  {
	pass $name
    }
    -re "0x\[0-9a-f\]+ in .* \\(\\) from /lib/ld.so.1.*$gdb_prompt" { 
	fail "gdb/1555" $name 
    }
    timeout {
        fail "timeout s"
    }
}

# PR/1555 (was shlib 1237)
set name "Next while in a shared lib function"
send "n\n"
expect {
    -timeout 5
    -re "\[0-9\]+.*return a;.*$gdb_prompt" {
	pass $name
    }
    -re "Single stepping until exit from function .*, \r\nwhich has no line number information.\r\n\r\n$inferior_exited_re normally.*$gdb_prompt" { 
	fail "gdb/1555 $name "
    }
    timeout {
        fail "timeout n"
    }
}

gdb_exit
exit $GRET

interact
