#!/usr/bin/expect -f
# Copyright 2010-2012 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Tests for permissions and observer mode.

# The permissions flags are only fully functional with stubs or targets
# that can run asynchronously.

source ../lib/gdb_proc.exp
global target_dir
global GRET;
set GRET 0;
global ARGC;
global GDB_TOOL_DIR
set ARGC $argc
global GDBPROMPT
global gdb_prompt
global target_ip
global target_prompt
global inferior_exited_re
global test_username test_password  target_passwd
global GDBSERVER_TOOL_DIR HOST_GDB_TOOL host_ip host_prompt host_passwd FLAG HOST_SDK_LIB_DIR 

spawn su $test_username
expect {
    -timeout 2
    -re "Password:" {
        send "$test_password\n"
        gdb_test "whoami" "$test_username"
    }
    timeout {
        gdb_test "whoami" "$test_username"
        if { $GRET != 0 } {
        send_user "timeout su"
        }
    }
}

if { $GRET != 0 } {
    send_user "su $test_username fail "
    exit $GRET
}

ssh_on_to_target
sleep 3 

 if { $GRET } {
    send_user "ssh on to $target_ip fail"
    exit $GRET
 }

set target_prompt "/tmp/for_gdbserver_test/gdbserver.base"
gdb_test "cd $target_prompt" "$target_prompt"
gdb_test "export LD_LIBRARY_PATH=$target_prompt" "$target_prompt"

set testfile permission
set srcfile start.c
gdb_test "'$GDBSERVER_TOOL_DIR'gdbserver $host_ip:1111 $testfile &" "$gdb_prompt"
gdb_test "exit"  "$host_prompt"
sleep 3

#gdb_test "export LD_LIBRARY_PATH=$HOST_SDK_LIB_DIR:."  "$host_prompt"
gdb_test "$HOST_GDB_TOOL $testfile" "$gdb_prompt"

#set binfile ${objdir}/${subdir}/${testfile}

#if  { [gdb_compile "${srcdir}/${subdir}/${srcfile}" "${binfile}" executable {debug nowarnings}] != "" } {
#     untested permissions.exp
#     return -1
#    }

#if [get_compiler_info] {
#    return -1
#}

#gdb_exit
#gdb_start
#gdb_reinitialize_dir $srcdir/$subdir

gdb_test "show may-write-registers" \
    "Permission to write into registers is on."

gdb_test "show may-write-memory" \
    "Permission to write into target memory is on."

gdb_test "show may-insert-breakpoints" \
    "Permission to insert breakpoints in the target is on."

gdb_test "show may-insert-tracepoints" \
    "Permission to insert tracepoints in the target is on."

gdb_test "show may-insert-fast-tracepoints" \
    "Permission to insert fast tracepoints in the target is on."

gdb_test "show may-interrupt" \
    "Permission to interrupt or signal the target is on."

gdb_test "set observer on" "Observer mode is now on." "enable observer mode"

gdb_test "show may-write-memory" \
    "Permission to write into target memory is off."

gdb_test "show may-write-registers" \
    "Permission to write into registers is off."

gdb_test "show may-insert-breakpoints" \
    "Permission to insert breakpoints in the target is off."

gdb_test "show may-insert-tracepoints" \
    "Permission to insert tracepoints in the target is off."

gdb_test "show may-insert-fast-tracepoints" \
    "Permission to insert fast tracepoints in the target is on."

gdb_test "show may-interrupt" \
    "Permission to interrupt or signal the target is off."

#gdb_test "set observer off" "Observer mode is now off." "disable observer mode"

# Go back to all-stop mode.

gdb_test_no_output "set non-stop off"

#gdb_load ${binfile}

#if ![runto_main] then {
#    perror "couldn't run to breakpoint"
#    continue
#}
gdb_test "target remote $target_ip:1111" "Remote debugging using $target_ip:1111.*$gdb_prompt"

gdb_test "set solib-search-path $HOST_SDK_LIB_DIR:." "$gdb_prompt"
gdb_test "b main" ""
gdb_test "c" ""

gdb_test "print x = 45" "$decimal = 45" "set a global"

gdb_test "print x" "$decimal = 45"

gdb_test "set may-write-memory off"

gdb_test "print x = 92" "Writing to memory is not allowed.*" \
    "try to set a global"

gdb_test "print x" "$decimal = 45"
gdb_exit
# FIXME Add tests for other flags when a testsuite-able target becomes
# available.
exit $GRET

interact
